################################################################################
# php-fpm image
################################################################################

FROM php:7.2-fpm-alpine

MAINTAINER dtoch.56@gmail.com

################################################################################
# Build instructions
################################################################################

# Install mysql and cron
RUN apk --update add --no-cache --virtual .persistent-deps \
    zip \
    git \
    vim \
    curl \
    bash \
    socat \
    tzdata \
    findutils \
    openssh-client

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer \
    && rm -rf /tmp/* /var/tmp/* /usr/share/doc/*

RUN apk update && apk add autoconf libressl-dev g++ make pcre-dev libpng-dev zlib-dev icu-dev freetype-dev libjpeg-turbo-dev gettext-dev libxml2-dev postgresql-dev
RUN NPROC=$(grep -c ^processor /proc/cpuinfo 2>/dev/null || 1) && \
    docker-php-ext-install -j${NPROC} gd
RUN docker-php-ext-install intl zip xml pdo_mysql

ENV MEMCACHED_DEPS zlib-dev libmemcached-dev cyrus-sasl-dev
RUN apk add --no-cache --update libmemcached-libs zlib
RUN set -xe \
    && apk add --no-cache --update --virtual .phpize-deps $PHPIZE_DEPS \
    && apk add --no-cache --update --virtual .memcached-deps $MEMCACHED_DEPS \
    && pecl install memcached \
    && echo "extension=memcached.so" > /usr/local/etc/php/conf.d/20_memcached.ini \
    && rm -rf /usr/share/php7 \
    && rm -rf /tmp/* \
    && apk del .memcached-deps .phpize-deps

RUN apk update && apk add -u yarn nodejs
RUN apk del --purge autoconf libressl-dev g++ make pcre-dev libpng-dev zlib-dev libjpeg-turbo-dev gettext-dev
RUN rm -rf /var/cache/apk/*

ENV TZ=Europe/Moscow
RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone

## Set LOCALE to UTF8
RUN apk --update add --no-cache --virtual locales
ENV LANG=en_US.UTF-8 \
    LANGUAGE=en_US.UTF-8 \
    LC_CTYPE=en_US.UTF-8 \
    LC_ALL=en_US.UTF-8

RUN apk add shadow && usermod -u 1000 www-data -s /bin/bash && groupmod -g 1000 www-data

WORKDIR /var/www/models
